/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "symbol" (version "1.2"))
(symbol
	(rect 16 16 288 208)
	(text "MEM_Register" (rect 5 0 85 14)(font "Arial" (font_size 8)))
	(text "inst" (rect 8 176 25 188)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "Flush" (rect 0 0 30 14)(font "Arial" (font_size 8)))
		(text "Flush" (rect 21 27 51 41)(font "Arial" (font_size 8)))
		(line (pt 0 32)(pt 16 32))
	)
	(port
		(pt 0 48)
		(input)
		(text "WE" (rect 0 0 18 14)(font "Arial" (font_size 8)))
		(text "WE" (rect 21 43 39 57)(font "Arial" (font_size 8)))
		(line (pt 0 48)(pt 16 48))
	)
	(port
		(pt 0 64)
		(input)
		(text "Clk" (rect 0 0 16 14)(font "Arial" (font_size 8)))
		(text "Clk" (rect 21 59 37 73)(font "Arial" (font_size 8)))
		(line (pt 0 64)(pt 16 64))
	)
	(port
		(pt 0 80)
		(input)
		(text "BranchEqual" (rect 0 0 71 14)(font "Arial" (font_size 8)))
		(text "BranchEqual" (rect 21 75 92 89)(font "Arial" (font_size 8)))
		(line (pt 0 80)(pt 16 80))
	)
	(port
		(pt 0 96)
		(input)
		(text "BranchNotEqual" (rect 0 0 90 14)(font "Arial" (font_size 8)))
		(text "BranchNotEqual" (rect 21 91 111 105)(font "Arial" (font_size 8)))
		(line (pt 0 96)(pt 16 96))
	)
	(port
		(pt 0 112)
		(input)
		(text "MemRead" (rect 0 0 55 14)(font "Arial" (font_size 8)))
		(text "MemRead" (rect 21 107 76 121)(font "Arial" (font_size 8)))
		(line (pt 0 112)(pt 16 112))
	)
	(port
		(pt 0 128)
		(input)
		(text "MemWrite" (rect 0 0 55 14)(font "Arial" (font_size 8)))
		(text "MemWrite" (rect 21 123 76 137)(font "Arial" (font_size 8)))
		(line (pt 0 128)(pt 16 128))
	)
	(port
		(pt 0 144)
		(input)
		(text "Jump" (rect 0 0 29 14)(font "Arial" (font_size 8)))
		(text "Jump" (rect 21 139 50 153)(font "Arial" (font_size 8)))
		(line (pt 0 144)(pt 16 144))
	)
	(port
		(pt 272 32)
		(output)
		(text "BranchEqualResult" (rect 0 0 107 14)(font "Arial" (font_size 8)))
		(text "BranchEqualResult" (rect 144 27 251 41)(font "Arial" (font_size 8)))
		(line (pt 272 32)(pt 256 32))
	)
	(port
		(pt 272 48)
		(output)
		(text "BranchNotEqualResult" (rect 0 0 126 14)(font "Arial" (font_size 8)))
		(text "BranchNotEqualResult" (rect 125 43 251 57)(font "Arial" (font_size 8)))
		(line (pt 272 48)(pt 256 48))
	)
	(port
		(pt 272 64)
		(output)
		(text "MemReadResult" (rect 0 0 90 14)(font "Arial" (font_size 8)))
		(text "MemReadResult" (rect 161 59 251 73)(font "Arial" (font_size 8)))
		(line (pt 272 64)(pt 256 64))
	)
	(port
		(pt 272 80)
		(output)
		(text "MemWriteResult" (rect 0 0 90 14)(font "Arial" (font_size 8)))
		(text "MemWriteResult" (rect 161 75 251 89)(font "Arial" (font_size 8)))
		(line (pt 272 80)(pt 256 80))
	)
	(port
		(pt 272 96)
		(output)
		(text "JumpResult" (rect 0 0 64 14)(font "Arial" (font_size 8)))
		(text "JumpResult" (rect 187 91 251 105)(font "Arial" (font_size 8)))
		(line (pt 272 96)(pt 256 96))
	)
	(drawing
		(rectangle (rect 16 16 256 176))
	)
)
